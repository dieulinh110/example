keyid = max(call_history_raw$keyid)+1:n(),
call_duration = paste0("0", call_duration),
actual_duration = paste0("0", actual_duration))
result <- bind_rows(call_history_raw, call_history)
if (is_local()) {
## Check data to look for possible errors
DT::datatable(result)
} else {
## Remove unnecessary objects
rm(list = setdiff(ls(), "result"))
## Save result to disk
data.table::fwrite(result, file = "result.csv")
}
write.csv(result, "call_history_20180928.csv", row.names = F, na = "")
View(result)
call_history <- call_history %>%
mutate(ip_acc = gsub("^[^<]+<|>.*", "", out_ipacc),
ip_acc = ifelse(grepl("<|>", out_ipacc), ip_acc, ""),
ip_display = gsub('"', '', regmatches(out_ipacc, gregexpr('"([^"]*)"', out_ipacc))),
ip_display = gsub(" $", "", ip_display),
ip_display = ifelse(ip_display == "character(0)", "", ip_display),
ip_display = ifelse(grepl("<|>", out_ipacc), out_ipacc, ""),
keyid = max(call_history_raw$keyid)+1:n(),
call_duration = paste0("0", call_duration),
actual_duration = paste0("0", actual_duration))
View(call_history)
call_history <- call_history %>%
mutate(ip_acc = gsub("^[^<]+<|>.*", "", out_ipacc),
ip_acc = ifelse(grepl("<|>", out_ipacc), ip_acc, ""),
ip_display = gsub('"', '', regmatches(out_ipacc, gregexpr('"([^"]*)"', out_ipacc))),
ip_display = gsub(" $", "", ip_display),
ip_display = ifelse(ip_display == "character(0)", "", ip_display),
ip_display = ifelse(grepl("<|>", out_ipacc), ip_display, out_ipacc),
keyid = max(call_history_raw$keyid)+1:n(),
call_duration = paste0("0", call_duration),
actual_duration = paste0("0", actual_duration))
View(call_history)
## load packages
RTA::load_packages(readxl, tidyr, dplyr, RTA)
call_history <- readr::read_csv("~/Desktop/Untitled 1.csv", col_types = cols(.default = "c"))
call_history_raw <- get_datasource_data("S038", "call_history")
## -----------------------------------------------------------------------------
## TRANSFORM DATA
## -----------------------------------------------------------------------------
names(call_history) <- toupper(names(call_history))
names(call_history) <- iconv(names(call_history), from = "UTF-8", to = "ASCII//TRANSLIT")
name_dict <- make_dict(c("THOI GIAN", "SO GOI",
"DAU SO", "SO NHAN",
"TRANG THAI", "THOI GIAN CUOC GOI",
"THOI GIAN THUC GOI", "PIN"),
c("starttime", "out_ipacc",
"out_telno", "receiver_telno",
"call_status", "call_duration",
"actual_duration", "pin"))
names(call_history) <- encode(names(call_history), name_dict)
call_history$pin <- NULL
call_history_raw <- call_history_raw %>%
select(-dm_id, -max_order, -marked_as_deleted) %>%
mutate(keyid = as.double(keyid))
call_history$starttime <- as.POSIXct(call_history$starttime)
call_history$starttime <- format(call_history$starttime, "%d/%m/%Y %H:%M")
call_history <- call_history %>%
mutate(ip_acc = gsub("^[^<]+<|>.*", "", out_ipacc),
ip_acc = ifelse(grepl("<|>", out_ipacc), ip_acc, ""),
ip_display = gsub('"', '', regmatches(out_ipacc, gregexpr('"([^"]*)"', out_ipacc))),
ip_display = gsub(" $", "", ip_display),
ip_display = ifelse(ip_display == "character(0)", "", ip_display),
ip_display = ifelse(grepl("<|>", out_ipacc), ip_display, out_ipacc),
keyid = max(call_history_raw$keyid)+1:n(),
call_duration = paste0("0", call_duration),
actual_duration = paste0("0", actual_duration))
result <- bind_rows(call_history_raw, call_history)
View(result)
write.csv(result, "call_history_20180928.csv", row.names = F, na = "")
## -----------------------------------------------------------------------------
## global setup
knitr::opts_chunk$set(echo = FALSE, comment = "", message = FALSE, warning = FALSE)
options(shiny.sanitize.errors = FALSE, scipen = 999, knitr.kable.NA = "")
Sys.setlocale(category = "LC_ALL", locale = "en_US.UTF-8")
## -----------------------------------------------------------------------------
## load packages
RTA::load_packages(readr, tidyr, dplyr, DT, RTA)
## -----------------------------------------------------------------------------
## import data
if (is_local()) {
import_family_data(site = params$projcode)
call_history_raw <- get_dm_data("S038", "call_history")
} else {
bw_sample <- get_family_data("S038", "BW_SAMPLE_FORM_OFFICIAL",
filter = "bw_language == 'Vietnamese'")
bw_survey <- get_family_data("S038", "BW_BASELINE_SURVEY_OFFICIAL",
filter = "country == 'Vietnamese'")
call_history_raw <- get_dm_data("S038", "call_history")
}
## -----------------------------------------------------------------------------
## lastest instance
bw_survey <- handle_returned_insts(bw_survey, "instanceID")
bw_sample <- handle_returned_insts(bw_sample, "instanceID")
bw_sample <- mutate(bw_sample, bw_sampling = substr(bw_sampling, 1, 41))
bw_survey <- mutate(bw_survey, bw_baseline = substr(bw_baseline, 1, 41))
bw_survey <- left_join(bw_survey[, c("bw_a1", "bw_a2", "bw_a3", "bw_baseline")],
bw_sample,
by = c("bw_baseline" = "bw_sampling"))
bw_survey <- select(bw_survey,
bw_baseline, submission_date, starttime, endtime,
username, fullname, bw_language, bw_time_start,
bw_enum_name, bw_a1, bw_a2, bw_a3, bw_company_name,
bw_company_lb, bw_company_size,
bw_company_type, bw_city_lb, bw_dist_lb, bw_ward_lb,
bw_respt_name, bw_respt_sex, bw_birth, bw_respt_phone,
bw_respt_fb, bw_zalo_wa, bw_zalo_wa_number,
bw_respt_depart_fin, bw_respt_part_fin,
bw_respt_postion, bw_respt_code, bw_respt_idpic,
bw_shift, bw_decline_reason, bw_appoint_date)
bw_survey <- replace_with_na(bw_survey)
## -----------------------------------------------------------------------------
## call history
second_to_period <- function(second) {
second <- as.double(second)
if (is.na(second) | second < 0) {
out <- NA
} else {
hours <- floor(second / 60 / 60)
mins <- floor((second - hours * 60 * 60) / 60)
seconds <- round((second - hours * 60 * 60 - mins * 60))
hours <- ifelse(nchar(hours) == 1, paste0("0", hours), hours)
mins <- ifelse(nchar(mins) == 1, paste0("0", mins), mins)
seconds <- ifelse(nchar(seconds) == 1, paste0("0", seconds), seconds)
out <- paste0(hours, ":", mins, ":", seconds)
}
out
}
call_history <- call_history_raw %>%
mutate(adj_telno = gsub("^45", "", receiver_telno),
pad_telno = paste0("0", receiver_telno)) %>%
filter(call_status == "ANSWERED")
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all),
time_all = paste0(ip_display, ":", time_all, collapse = ", ")) %>%
ungroup()
View(call_history_raw)
View(call_summary)
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup()
View(call_summary)
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(pad_telno, starttime_ed, ip_acc))
## -----------------------------------------------------------------------------
## global setup
knitr::opts_chunk$set(echo = FALSE, comment = "", message = FALSE, warning = FALSE)
options(shiny.sanitize.errors = FALSE, scipen = 999, knitr.kable.NA = "")
Sys.setlocale(category = "LC_ALL", locale = "en_US.UTF-8")
## -----------------------------------------------------------------------------
## load packages
RTA::load_packages(readr, tidyr, dplyr, DT, RTA)
## -----------------------------------------------------------------------------
## import data
if (is_local()) {
import_family_data(site = params$projcode)
call_history_raw <- get_dm_data("S038", "call_history")
} else {
bw_sample <- get_family_data("S038", "BW_SAMPLE_FORM_OFFICIAL",
filter = "bw_language == 'Vietnamese'")
bw_survey <- get_family_data("S038", "BW_BASELINE_SURVEY_OFFICIAL",
filter = "country == 'Vietnamese'")
call_history_raw <- get_dm_data("S038", "call_history")
}
bw_survey <- handle_returned_insts(bw_survey, "instanceID")
bw_sample <- handle_returned_insts(bw_sample, "instanceID")
bw_sample <- mutate(bw_sample, bw_sampling = substr(bw_sampling, 1, 41))
bw_survey <- mutate(bw_survey, bw_baseline = substr(bw_baseline, 1, 41))
## -----------------------------------------------------------------------------
## Merge sample and baseline
bw_survey <- left_join(bw_survey[, c("bw_a1", "bw_a2", "bw_a3", "bw_baseline")],
bw_sample,
by = c("bw_baseline" = "bw_sampling"))
## -----------------------------------------------------------------------------
## Select column
bw_survey <- select(bw_survey,
bw_baseline, submission_date, starttime, endtime,
username, fullname, bw_language, bw_time_start,
bw_enum_name, bw_a1, bw_a2, bw_a3, bw_company_name,
bw_company_lb, bw_company_size,
bw_company_type, bw_city_lb, bw_dist_lb, bw_ward_lb,
bw_respt_name, bw_respt_sex, bw_birth, bw_respt_phone,
bw_respt_fb, bw_zalo_wa, bw_zalo_wa_number,
bw_respt_depart_fin, bw_respt_part_fin,
bw_respt_postion, bw_respt_code, bw_respt_idpic,
bw_shift, bw_decline_reason, bw_appoint_date)
## -----------------------------------------------------------------------------
## Replace with na
bw_survey <- replace_with_na(bw_survey)
## -----------------------------------------------------------------------------
## call history
second_to_period <- function(second) {
second <- as.double(second)
if (is.na(second) | second < 0) {
out <- NA
} else {
hours <- floor(second / 60 / 60)
mins <- floor((second - hours * 60 * 60) / 60)
seconds <- round((second - hours * 60 * 60 - mins * 60))
hours <- ifelse(nchar(hours) == 1, paste0("0", hours), hours)
mins <- ifelse(nchar(mins) == 1, paste0("0", mins), mins)
seconds <- ifelse(nchar(seconds) == 1, paste0("0", seconds), seconds)
out <- paste0(hours, ":", mins, ":", seconds)
}
out
}
call_history <- call_history_raw %>%
mutate(adj_telno = gsub("^45", "", receiver_telno),
pad_telno = paste0("0", receiver_telno)) %>%
filter(call_status == "ANSWERED")
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(pad_telno, starttime_ed, ip_acc))
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, starttime_ed, ip_acc)))
View(call_summary)
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, time_start, ip_acc)))
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, time_start, ip_acc))) %>%
group_by(pad_telno) %>%
mutate(time_all = paste0(ip_display, ": ", time_all, collapse = ", ")) %>%
ungroup() %>%
filter(!duplicated(pad_telno))
View(call_summary)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all, time_start),
by = c("bw_respt_phone" = "pad_telno"))
bw_survey_have_call <- bw_survey %>%
filter(bw_respt_phone %in% call_history$receiver_telno |
bw_respt_phone %in% call_history$adj_telno |
bw_respt_phone %in% call_history$pad_telno)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all, time_start),
by = c("bw_respt_phone" = "pad_telno"))
View(bw_survey1)
check <- filter(bw_survey1, is.na(time_all))
View(check)
check <- filter(check, calling == "Có")
View(check)
View(call_history)
View(check)
View(call_history)
View(call_history)
View(call_summary)
seq_along(bw_sample)
seq_along(bw_sample$id)
View(call_summary)
View(check)
View(call_summary)
View(check)
View(check)
View(call_history_raw)
bw_survey_have_call1 <- bw_survey %>%
filter(bw_respt_phone %in% call_history$receiver_telno)
bw_survey_have_call2 <- bw_survey %>%
filter(bw_respt_phone %in% call_history$adj_telno)
bw_survey_have_call3 <- bw_survey %>%
filter(bw_respt_phone %in% call_history$pad_telno)
bw_survey_have_call <- bind_rows(bw_survey_have_call1, bw_survey_have_call2, bw_survey_have_call3)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all, time_start),
by = c("bw_respt_phone" = "pad_telno"))
check <- filter(bw_survey1, is.na(time_all))
check <- filter(check, calling == "Có")
View(check)
View(call_history)
bw_survey_have_call1 <- bw_survey %>%
filter(bw_respt_phone == call_history$receiver_telno)
bw_survey_have_call1 <- bw_survey %>%
filter(bw_respt_phone == call_history$receiver_telno)
bw_survey_have_call2 <- bw_survey %>%
filter(bw_respt_phone == call_history$adj_telno)
bw_survey_have_call3 <- bw_survey %>%
filter(bw_respt_phone == call_history$pad_telno)
bw_survey_have_call1 <- bw_survey %>%
filter(bw_respt_phone %in% call_history$receiver_telno)
bw_survey_have_call2 <- bw_survey %>%
filter(bw_respt_phone %in% call_history$adj_telno)
bw_survey_have_call3 <- bw_survey %>%
filter(bw_respt_phone %in% call_history$pad_telno)
bw_survey_have_call <- bind_rows(bw_survey_have_call1, bw_survey_have_call2, bw_survey_have_call3)
View(bw_survey_have_call)
View(bw_survey_have_call2)
View(bw_survey_have_call3)
View(call_history)
View(check)
View(call_history)
View(call_history)
View(bw_survey)
View(call_history)
View(bw_survey_have_call3)
View(bw_survey_have_call3)
View(check)
View(bw_survey)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline &
bw_respt_phone %in% bw_survey_have_call$bw_respt_phone, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all, time_start),
by = c("bw_respt_phone" = "pad_telno"))
check <- filter(bw_survey1, is.na(time_all))
check <- filter(check, calling == "Có")
View(check)
View(call_history)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline &
bw_respt_phone %in% bw_survey_have_call$bw_respt_phone, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all_pad, time_start_pad),
by = c("bw_respt_phone" = "pad_telno")) %>%
left_join(., select(call_summary, adj_telno, time_all_adj, time_start_adj),
by = c("bw_respt_phone" = "adj_telno")) %>%
left_join(., select(call_summary, receiver_telno, time_all, time_start),
by = c("bw_respt_phone" = "receiver_telno"))
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline &
bw_respt_phone %in% bw_survey_have_call$bw_respt_phone, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all_pad = time_all, time_start_pad = time_start),
by = c("bw_respt_phone" = "pad_telno")) %>%
left_join(., select(call_summary, adj_telno, time_all_adj = time_all, time_start_adj = time_start),
by = c("bw_respt_phone" = "adj_telno")) %>%
left_join(., select(call_summary, receiver_telno, time_all, time_start),
by = c("bw_respt_phone" = "receiver_telno"))
View(bw_survey1)
check <- filter(bw_survey1, is.na(time_all))
check <- filter(check, calling == "Có")
View(check)
check <- filter(bw_survey1, is.na(time_all_pad))
check <- filter(check, calling == "Có")
View(check)
check <- filter(bw_survey1, is.na(time_all_adj))
check <- filter(check, calling == "Có")
View(check)
View(bw_survey1)
View(call_history)
View(call_history)
table(bw_survey1$calling)
call_history <- call_history_raw %>%
mutate(adj_telno = gsub("^45", "", receiver_telno),
pad_telno = paste0("0", adj_telno)) %>%
filter(call_status == "ANSWERED")
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, time_start, ip_acc))) %>%
group_by(pad_telno) %>%
mutate(time_all = paste0(ip_display, ": ", time_all, collapse = ", ")) %>%
ungroup() %>%
filter(!duplicated(pad_telno))
bw_survey_have_call <- bw_survey %>%
filter(bw_respt_phone %in% call_history$pad_telno)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline &
bw_respt_phone %in% bw_survey_have_call$bw_respt_phone, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all_pad = time_all, time_start_pad = time_start),
by = c("bw_respt_phone" = "pad_telno")) #%>%
check <- filter(bw_survey1, is.na(time_all_pad))
check <- filter(check, calling == "Có")
table(bw_survey1$calling)
bw_check <- filter(bw_survey1, calling == "Có")
call_history <- call_history_raw %>%
mutate(adj_telno = gsub("^45", "", receiver_telno),
pad_telno = paste0("0", receiver_telno)) %>%
filter(call_status == "ANSWERED")
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, time_start, ip_acc))) %>%
group_by(pad_telno) %>%
mutate(time_all = paste0(ip_display, ": ", time_all, collapse = ", ")) %>%
ungroup() %>%
filter(!duplicated(pad_telno))
bw_survey_have_call <- bw_survey %>%
filter(bw_respt_phone %in% call_history$pad_telno |
bw_respt_phone %in% call_history$adj_telno |
bw_respt_phone %in% call_history$receiver_telno)
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline &
bw_respt_phone %in% bw_survey_have_call$bw_respt_phone, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all_pad = time_all, time_start_pad = time_start),
by = c("bw_respt_phone" = "pad_telno")) #%>%
table(bw_survey1$calling)
bw_check1 <- filter(bw_survey1, calling == "Có")
filter(!bw_check$bw_baseline %in% bw_check1$bw_baseline)
filter(bw_check,!bw_baseline %in% bw_check1$bw_baseline)
x <- filter(bw_check,!bw_baseline %in% bw_check1$bw_baseline)
View(x)
View(call_history)
View(call_summary)
View(x)
View(call_history)
call_history <- call_history_raw %>%
call_history <- call_history_raw %>%
mutate(adj_telno = gsub("^45", "", receiver_telno),
pad_telno = ifelse(adj_telno != "", paste0("0", receiver_telno), adj_telno)) %>%
filter(call_status == "ANSWERED")
call_history <- call_history_raw %>%
mutate(adj_telno = gsub("^45", "", receiver_telno),
pad_telno = ifelse(adj_telno != "", paste0("0", receiver_telno), adj_telno)) %>%
filter(call_status == "ANSWERED")
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, time_start, ip_acc))) %>%
group_by(pad_telno) %>%
mutate(time_all = paste0(ip_display, ": ", time_all, collapse = ", ")) %>%
ungroup() %>%
filter(!duplicated(pad_telno))
call_summary <- call_history %>%
mutate(time = as.numeric(lubridate::as.period(lubridate::hms(actual_duration), unit = "sec")),
starttime_ed = lubridate::dmy_hm(starttime)) %>%
group_by(ip_acc, pad_telno) %>%
mutate(time_start = min(starttime_ed, na.rm = TRUE),
time_start = format(time_start, format = "%d/%m/%Y %H:%M"),
time_all = sum(time, na.rm = TRUE),
time_all = second_to_period(time_all)) %>%
ungroup() %>%
filter(!duplicated(paste0(pad_telno, time_start, ip_acc))) %>%
group_by(pad_telno) %>%
mutate(time_all = paste0(ip_display, ": ", time_all, collapse = ", ")) %>%
ungroup() %>%
filter(!duplicated(pad_telno))
bw_survey_have_call <- bw_survey %>%
filter(bw_respt_phone %in% call_history$pad_telno |
bw_respt_phone %in% call_history$adj_telno |
bw_respt_phone %in% call_history$receiver_telno)
bw_survey_have_call <- bw_survey %>%
filter(bw_respt_phone %in% call_history$pad_telno) #|
bw_survey1 <- bw_survey %>%
mutate(calling = ifelse(bw_baseline %in% bw_survey_have_call$bw_baseline &
bw_respt_phone %in% bw_survey_have_call$bw_respt_phone, "Có", "Không")) %>%
left_join(., select(call_summary, pad_telno, time_all_pad = time_all, time_start_pad = time_start),
by = c("bw_respt_phone" = "pad_telno")) #%>%
check <- filter(bw_survey1, is.na(time_all_pad))
check <- filter(check, calling == "Có")
View(check)
View(call_history)
